// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/products": {
            "get": {
                "description": "Find a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Find a product",
                "parameters": [
                    {
                        "description": "Product find request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductFindRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "description": "Product update request",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new product with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product creation request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "description": "Product delete request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            }
        },
        "/products/list": {
            "get": {
                "description": "List all products for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            }
        },
        "/sku": {
            "get": {
                "description": "List Product SKU",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sku"
                ],
                "summary": "List SKU",
                "parameters": [
                    {
                        "description": "SKU data",
                        "name": "sku",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new SKU for a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sku"
                ],
                "summary": "Create a SKU",
                "parameters": [
                    {
                        "description": "SKU data",
                        "name": "sku",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a SKU by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sku"
                ],
                "summary": "Delete a SKU",
                "parameters": [
                    {
                        "description": "SKU delete request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User  registration request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authenticate a user and return access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User  login request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Retrieve the current user's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get current user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "description": "User  update request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            }
        },
        "/users/me/addresses": {
            "get": {
                "description": "Retrieve all addresses for the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "List all addresses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an address for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Update an existing address",
                "parameters": [
                    {
                        "description": "Address update request",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UpdateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new address for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Register a new address",
                "parameters": [
                    {
                        "description": "Address creation request",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.CreateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            }
        },
        "/users/me/addresses/{address_id}": {
            "get": {
                "description": "Retrieve a specific address for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Find an address",
                "parameters": [
                    {
                        "description": "Address find request",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.FindAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            }
        },
        "/users/me/avatar": {
            "post": {
                "description": "Upload a new avatar for the current user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Upload user avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "User  avatar image",
                        "name": "img",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_product_model_dto.ProductCreateRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "summary"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 100
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "summary": {
                    "type": "string",
                    "maxLength": 100
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_product_model_dto.ProductDeleteRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_product_model_dto.ProductFindRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUCreateRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUDeleteRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_product_model_dto.ProductUpdateRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "summary"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 100
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "summary": {
                    "type": "string",
                    "maxLength": 100
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_user_model_dto.CreateAddressRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 100
                },
                "country": {
                    "type": "string",
                    "maxLength": 100
                },
                "postal_code": {
                    "type": "string",
                    "maxLength": 100
                },
                "street": {
                    "type": "string",
                    "maxLength": 100
                },
                "title": {
                    "type": "string",
                    "maxLength": 100
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_user_model_dto.FindAddressRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_user_model_dto.UpdateAddressRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 100
                },
                "country": {
                    "type": "string",
                    "maxLength": 100
                },
                "id": {
                    "type": "integer"
                },
                "postal_code": {
                    "type": "string",
                    "maxLength": 100
                },
                "street": {
                    "type": "string",
                    "maxLength": 100
                },
                "title": {
                    "type": "string",
                    "maxLength": 100
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_user_model_dto.UserLoginRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_user_model_dto.UserRegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "github_com_MociW_store-api-golang_internal_user_model_dto.UserUpdateRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 13
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Store API",
	Description:      "API for managing store data",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
