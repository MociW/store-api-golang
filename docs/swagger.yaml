basePath: /api/v1
definitions:
  github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
  github_com_MociW_store-api-golang_internal_product_model_dto.ProductCreateRequest:
    properties:
      description:
        maxLength: 100
        type: string
      name:
        maxLength: 100
        type: string
      summary:
        maxLength: 100
        type: string
      user_id:
        type: string
    required:
    - description
    - name
    - summary
    type: object
  github_com_MociW_store-api-golang_internal_product_model_dto.ProductDeleteRequest:
    properties:
      id:
        type: integer
      user_id:
        type: string
    type: object
  github_com_MociW_store-api-golang_internal_product_model_dto.ProductFindRequest:
    properties:
      id:
        type: integer
      user_id:
        type: string
    type: object
  github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUCreateRequest:
    properties:
      color:
        type: string
      name:
        type: string
      price:
        type: number
      product_id:
        type: integer
      quantity:
        type: integer
      size:
        type: string
      sku:
        type: string
      user_id:
        type: string
    type: object
  github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUDeleteRequest:
    properties:
      id:
        type: integer
      product_id:
        type: integer
      user_id:
        type: string
    type: object
  github_com_MociW_store-api-golang_internal_product_model_dto.ProductUpdateRequest:
    properties:
      description:
        maxLength: 100
        type: string
      id:
        type: integer
      name:
        maxLength: 100
        type: string
      summary:
        maxLength: 100
        type: string
      user_id:
        type: string
    required:
    - description
    - name
    - summary
    type: object
  github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
  github_com_MociW_store-api-golang_internal_user_model_dto.CreateAddressRequest:
    properties:
      city:
        maxLength: 100
        type: string
      country:
        maxLength: 100
        type: string
      postal_code:
        maxLength: 100
        type: string
      street:
        maxLength: 100
        type: string
      title:
        maxLength: 100
        type: string
      user_id:
        type: string
    type: object
  github_com_MociW_store-api-golang_internal_user_model_dto.FindAddressRequest:
    properties:
      id:
        type: integer
      user_id:
        type: string
    type: object
  github_com_MociW_store-api-golang_internal_user_model_dto.UpdateAddressRequest:
    properties:
      city:
        maxLength: 100
        type: string
      country:
        maxLength: 100
        type: string
      id:
        type: integer
      postal_code:
        maxLength: 100
        type: string
      street:
        maxLength: 100
        type: string
      title:
        maxLength: 100
        type: string
      user_id:
        type: string
    type: object
  github_com_MociW_store-api-golang_internal_user_model_dto.UserLoginRequest:
    properties:
      email:
        maxLength: 100
        type: string
      password:
        type: string
    required:
    - email
    type: object
  github_com_MociW_store-api-golang_internal_user_model_dto.UserRegisterRequest:
    properties:
      email:
        maxLength: 100
        type: string
      first_name:
        maxLength: 100
        type: string
      last_name:
        maxLength: 100
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
      username:
        maxLength: 100
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - username
    type: object
  github_com_MociW_store-api-golang_internal_user_model_dto.UserUpdateRequest:
    properties:
      email:
        maxLength: 100
        type: string
      first_name:
        maxLength: 100
        type: string
      last_name:
        maxLength: 100
        type: string
      phone_number:
        maxLength: 13
        type: string
      user_id:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: API for managing store data
  title: Store API
  version: "1.0"
paths:
  /products:
    delete:
      consumes:
      - application/json
      description: Delete a product by ID
      parameters:
      - description: Product delete request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Find a product by ID
      parameters:
      - description: Product find request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductFindRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: Find a product
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with the provided details
      parameters:
      - description: Product creation request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: Create a new product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product
      parameters:
      - description: Product update request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: Update a product
      tags:
      - products
  /products/list:
    get:
      consumes:
      - application/json
      description: List all products for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: List products
      tags:
      - products
  /sku:
    delete:
      consumes:
      - application/json
      description: Delete a SKU by ID
      parameters:
      - description: SKU delete request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: Delete a SKU
      tags:
      - sku
    get:
      consumes:
      - application/json
      description: List Product SKU
      parameters:
      - description: SKU data
        in: body
        name: sku
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: List SKU
      tags:
      - sku
    post:
      consumes:
      - application/json
      description: Create a new SKU for a product
      parameters:
      - description: SKU data
        in: body
        name: sku
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ProductSKUCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_product_model_dto.ApiProductResponse'
      summary: Create a SKU
      tags:
      - sku
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User  registration request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: Register a new user
      tags:
      - auth
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return access and refresh tokens
      parameters:
      - description: User  login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: User login
      tags:
      - auth
  /users/me:
    get:
      description: Retrieve the current user's information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: Get current user information
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the current user's information
      parameters:
      - description: User  update request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: Update user information
      tags:
      - users
  /users/me/addresses:
    get:
      description: Retrieve all addresses for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: List all addresses
      tags:
      - addresses
    post:
      consumes:
      - application/json
      description: Create a new address for the current user
      parameters:
      - description: Address creation request
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.CreateAddressRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: Register a new address
      tags:
      - addresses
    put:
      consumes:
      - application/json
      description: Update an address for the current user
      parameters:
      - description: Address update request
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.UpdateAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: Update an existing address
      tags:
      - addresses
  /users/me/addresses/{address_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific address for the current user
      parameters:
      - description: Address find request
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.FindAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: Find an address
      tags:
      - addresses
  /users/me/avatar:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new avatar for the current user
      parameters:
      - description: User  avatar image
        in: formData
        name: img
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_MociW_store-api-golang_internal_user_model_dto.ApiUserResponse'
      summary: Upload user avatar
      tags:
      - users
schemes:
- http
- https
swagger: "2.0"
